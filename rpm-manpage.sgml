<reference id="ch-rpm-manpage">

  <title>&RHL;</title>

<!-- rpm - Red Hat Package Manager -->
<!-- I am looking for help to finish SGML.  -->
<!-- manual page source format generated by PolyglotMan v3.0.8+XFree86
     available via anonymous ftp from
	ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z
-->

<RefEntry id="rpm.8">
  <RefMeta>
    <RefEntrytitle>rpm</RefEntrytitle>
    <ManVolNum>8</ManVolNum>
    <RefMiscInfo>&FORMAL-RHI;</RefMiscInfo>
  </RefMeta>

<RefNameDiv>
  <RefName>&rpm;</RefName>
  <RefPurpose>RPM Package Manager</RefPurpose>
</RefNameDiv>

<RefSynopsisDiv>
  <refsect2>
  <title>Querying and Verifying Packages:</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-q|--query</option></arg>
	<arg><synopfragmentref linkend="select-options">
	    select-options
	  </synopfragmentref></arg>
	<arg><synopfragmentref linkend="query-options">
	    query-options
	  </synopfragmentref></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-V|--verify</option></arg>
	<arg><synopfragmentref linkend="select-options">
	    select-options
	  </synopfragmentref></arg>
	<arg><option>--nodeps</option></arg>
	<arg><option>--nofiles</option></arg>
	<arg><option>--nomd5</option></arg>
	<arg><option>--noscripts</option></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-K|--checksig</option></arg>
	<arg><option>--nogpg</option></arg>
	<arg><option>--nopgp</option></arg>
	<arg><option>--nomd5</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2><refsect2>
  <title>Installing, Upgrading, and Removing Packages:</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-i|--install</option></arg>
	<arg><synopfragmentref linkend="install-options">
	    install-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-U|--upgrade</option></arg>
	<arg><synopfragmentref linkend="install-options">
	    install-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-F|--freshen</option></arg>
	<arg><synopfragmentref linkend="install-options">
	    install-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-e|--erase</option></arg>
	<arg><option>--allmatches</option></arg>
	<arg><option>--nodeps</option></arg>
	<arg><option>--noscripts</option></arg>
	<arg><option>--notriggers</option></arg>
	<sbr>
	<arg><option>--repackage</option></arg>
	<arg><option>--test</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_NAME</replaceable></arg>
	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2><refsect2>
  <title>Building Packages:</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-ba|-bb|-bp|-bc|-bi|-bl|-bs</option></arg>
	<arg><synopfragmentref linkend="build-options">
	    build-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>SPECFILE</replaceable></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-ta|-tb|-tp|-tc|-ti|-tl|-ts</option></arg>
	<arg><synopfragmentref linkend="build-options">
	    build-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>TARBALL</replaceable></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--rebuild|--recompile</option></arg>
	<arg rep="repeat" choice="plain"<replaceable>SOURCEPKG</replaceable></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="plain"><option>--tarbuild</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>TARBALL</replaceable></arg>
	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2><refsect2>
  <title>Miscellaneous:</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--initdb|--rebuilddb</option></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--addsign|--resign</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--querytags|--showrc</option></arg>
	</cmdsynopsis>
      </member><member>
	<cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--setperms|--setugids</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_NAME</replaceable></arg>
	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2><refsect2>
  <title>select-options</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	<command></command>

<!-- ================================ -->
  <synopfragment id="select-options">
  <group choice="plain">
    <arg><option><replaceable>PACKAGE_NAME</replaceable></option></arg>
    <arg><option>-a,--all</option></arg>
	<sbr>
    <arg><option>-f,--file</option> <replaceable>FILE</replaceable></arg>
    <arg><option>-g,--group</option> <replaceable>GROUP</replaceable></arg>
    <arg><option>-p,--package</option> <replaceable>PACKAGE_FILE</replaceable></arg>
	<sbr>
    <arg><option>--querybynumber</option> <replaceable>NUMBER</replaceable></arg>
    <arg><option>--triggeredby</option> <replaceable>PACKAGE_NAME</replaceable></arg>
	<sbr>
    <arg><option>--whatprovides</option> <replaceable>CAPABILITY</replaceable></arg>
    <arg><option>--whatrequires</option> <replaceable>CAPABILITY</replaceable></arg>
  </group>
  </synopfragment>
<!-- ================================ -->

	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2><refsect2>
  <title>query-options</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	<command></command>

<!-- ================================ -->
  <synopfragment id="query-options">
  <group choice="plain">
    <arg><option>--changelog</option></arg>
    <arg><option>-c,--configfiles</option></arg>
    <arg><option>-d,--docfiles</option></arg>
    <arg><option>--dump</option></arg>
    <arg><option>--filesbypkg</option></arg>
	<sbr>
    <arg><option>-i,--info</option></arg>
    <arg><option>--last</option></arg>
    <arg><option>-l,--list</option></arg>
    <arg><option>--provides</option></arg>
    <arg><option>--qf,--queryformat</option> <replaceable>QUERYFMT</replaceable></arg>
    <arg><option>-R,--requires</option></arg>
	<sbr>
    <arg><option>--scripts</option></arg>
    <arg><option>-s,--state</option></arg>
    <arg><option>--triggers,--triggerscripts</option></arg>
  </group>
  </synopfragment>
<!-- ================================ -->

	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2><refsect2>
  <title>install-options</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	<command></command>

<!-- ================================ -->
  <synopfragment id="install-options">
  <group choice="plain">
    <arg><option>--allfiles</option></arg>
    <arg><option>--badreloc</option></arg>
    <arg><option>--excludepath</option> <replaceable>OLDPATH</replaceable></arg>
    <arg><option>--excludedocs</option></arg>
    <arg><option>--force</option></arg>
    <arg><option>-h,--hash</option></arg>
	<sbr>
    <arg><option>--ignoresize</option></arg>
    <arg><option>--ignorearch</option></arg>
    <arg><option>--ignoreos</option></arg>
    <arg><option>--includedocs</option></arg>
    <arg><option>--justdb</option></arg>
	<sbr>
    <arg><option>--nodeps</option></arg>
    <arg><option>--noorder</option></arg>
    <arg><option>--noscripts</option></arg>
    <arg><option>--notriggers</option></arg>
	<sbr>
    <arg><option>--oldpackage</option></arg>
    <arg><option>--percent</option></arg>
    <arg><option>--prefix</option> <replaceable>NEWPATH</replaceable></arg>
    <arg><option>--relocate</option> <replaceable>OLDPATH</replaceable>=<replaceable>NEWPATH</replaceable></arg>
	<sbr>
    <arg><option>--repackage</option></arg>
    <arg><option>--replacefiles</option></arg>
    <arg><option>--replacepkgs</option></arg>
    <arg><option>--test</option></arg>
  </group>
  </synopfragment>
<!-- ================================ -->

	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2><refsect2>
  <title>build-options</title>
  <para>
    <simplelist>
      <member>
	<cmdsynopsis>
	<command></command>

<!-- ================================ -->
  <synopfragment id="build-options">
  <group choice="plain">
    <arg><option>--buildroot</option> <replaceable>DIRECTORY</replaceable></arg>
    <arg><option>--clean</option></arg>
    <arg><option>--rmsource</option></arg>
    <arg><option>--rmspec</option></arg>
	<sbr>
    <arg><option>--short-circuit</option></arg>
    <arg><option>--sign</option></arg>
    <arg><option>--target</option>=<replaceable>PLATFORM</replaceable></arg>
    <arg><option>--test</option></arg>
  </group>
  </synopfragment>
<!-- ================================ -->

	</cmdsynopsis>
      </member>
    </simplelist>
  </para>
  </refsect2>
</RefSynopsisDiv>

<refsect1><title>Description</title>
  <para>
	&rpm; is a powerful <emphasis>Package Manager</emphasis>,
	which can be used to build, install, query, verify, update, and
	erase individual software packages.  A <emphasis>Package</emphasis> consists
	of an archive of files, and package information, including name,
	version, and description.
  </para>

  <para>
    One of the following basic modes must be selected:
	<emphasis>Query</emphasis>,
	<emphasis>Verify</emphasis>,
	<emphasis>Signature Check</emphasis>,
	<emphasis>Install/Upgrade/Freshen</emphasis>,
	<emphasis>Uninstall</emphasis>,
	<emphasis>Build Package</emphasis>,
	<emphasis>Build Package from Tarball</emphasis>,
	<emphasis>Recompile Package</emphasis>,
	<emphasis>Initialize Database</emphasis>,
	<emphasis>Rebuild Database</emphasis>,
	<emphasis>Resign</emphasis>,
	<emphasis>Add Signature</emphasis>,
	<emphasis>Set Owners/Groups</emphasis>,
	<emphasis>Show Querytags</emphasis>, and
	<emphasis>Show Configuration</emphasis>.
  </para>

  <refsect2><title>General Options</title>
  <para>
  These options can be used in all the different modes.
  </para>
  <variablelist>
    <varlistentry>
    <term><option>--dbpath</option> <replaceable>DIRECTORY</replaceable></term>
      <listitem><para>
	Use the database in <replaceable>DIRECTORY</replaceable> rathen
	than the default path <filename>/var/lib/rpm</filename>
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-?, --help</option></term>
      <listitem><para>
	Print a longer usage message then normal.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--pipe</option> <replaceable>CMD</replaceable></term>
      <listitem><para>
	Pipes the output of &rpm; to the command <replaceable>CMD</replaceable>.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--quiet</option></term>
      <listitem><para>
	Print as little as possible - normally only error messages will
	be displayed.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--rcfile</option> <replaceable>FILELIST</replaceable></term>
      <listitem><para>
	Each of the files in the colon separated
	<replaceable>FILELIST</replaceable>
	is read sequentially by &rpm; for configuration
	information.
	Only the first file in the list must exist, and tildes will be
	expanded to the value of <envar>$HOME</envar>.
	The default <replaceable>FILELIST</replaceable> is
		<filename>/usr/lib/rpm/rpmrc</filename>:<filename>/etc/rpmrc</filename>:<filename>~/.rpmrc</filename>.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--root</option> <replaceable>DIRECTORY</replaceable></term>
      <listitem><para>
	Use the system rooted at <replaceable>DIRECTORY</replaceable> for all operations.
	Note that this means the database will be read or modified under
	<replaceable>DIRECTORY</replaceable> and any
		<command>%pre</command> or
		<command>%post</command>
	scriptlet(s) are run after a chroot(2) to
		<replaceable>DIRECTORY</replaceable>.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--version</option></term>
      <listitem><para>
	Print a single line containing the version number of &rpm;
	being used. </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-vv</option></term>
      <listitem><para>
	Print lots of ugly debugging information.
      </para></listitem>
    </varlistentry>
  </variablelist>
  </refsect2>

  <refsect2><title>Install and Upgrade Options</title>
    <para>
	The general form of an rpm install command is 
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-i|--install</option></arg>
	<arg><synopfragmentref linkend="install-options">
	    install-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
      </cmdsynopsis>
    </para>

    <para>
	This installs a new package.
    </para>
    <para>
	The general form of an rpm upgrade command is 
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-U|--upgrade</option></arg>
	<arg><synopfragmentref linkend="install-options">
	    install-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
      </cmdsynopsis>
    </para>
 
    <para>
	This upgrades or installs the package currently installed
	to a newer version.  This is the same as install, except
	all other version(s) of the package are removed after the
	new package is installed.
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-F|--freshen</option></arg>
	<arg><synopfragmentref linkend="install-options">
	    install-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
      </cmdsynopsis>
    </para>

    <para>
	This will upgrade packages, but only if an earlier version
	currently exists. The <replaceable>PACKAGE_FILE</replaceable>
	may be specified as an
		<command>ftp</command> or
		<command>http</command> URL,
	in which case the package will be downloaded before being
	installed. See <command>FTP/HTTP OPTIONS</command>
	for information on &rpm;'s internal
		<command>ftp</command> and
		<command>http</command>
	client support. 
    </para>

    <para>
    <variablelist>
    <varlistentry>
    <term><option>--allfiles</option></term>
    <listitem><para>
	Installs or upgrades all the missingok files in the package,
	regardless if they exist.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--badreloc</option></term>
    <listitem><para>
	Used with <option>--relocate</option>, permit relocations on
	all file paths, not just those <replaceable>OLDPATH</replaceable>'s
	included in the binary package relocation hint(s).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--excludepath</option> <replaceable>OLDPATH</replaceable></term>
    <listitem><para>
	Don't install files whose name begins with
	<replaceable>OLDPATH</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--excludedocs</option></term>
    <listitem><para>
	Don't install any files which are marked as documentation
	(which includes man pages and texinfo documents).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--force</option></term>
    <listitem><para>
	Same as using
	<option>--replacepkgs</option>,
	<option>--replacefiles</option>, and
	<option>--oldpackage</option>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-h, --hash</option></term>
    <listitem><para>
	Print 50 hash marks as the package archive is unpacked.
	Use with <option>-v|--verbose</option> for a nicer display.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ignoresize</option></term>
    <listitem><para>
	Don't check mount file systems for sufficient disk space before
	installing this package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ignorearch</option></term>
    <listitem><para>
	Allow installation or upgrading even if the architectures
	of the binary package and host don't match.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ignoreos</option></term>
    <listitem><para>
	Allow installation or upgrading even if the operating
systems of the binary package and host don't match.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--includedocs</option></term>
    <listitem><para>
	Install documentation files. This is the default behavior.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--justdb</option></term>
      <listitem><para>
	Update only the database, not the filesystem.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--nodeps</option></term>
    <listitem><para>
	Don't do a dependency check before installing or upgrading
	a package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noorder</option></term>
    <listitem><para>
	Don't reorder the packages for an install. The list of
	packages would normally be reordered to satisfy dependancies.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noscripts</option></term>
    <term><option>--nopre</option></term>
    <term><option>--nopost</option></term>
    <term><option>--nopreun</option></term>
    <term><option>--nopostun</option></term>
    <listitem><para>
	Don't execute the scriptlet of the same name.
	The <option>--noscripts</option> option is equivalent to
	</para><para>
		<option>--nopre</option>
		<option>--nopost</option>
		<option>--nopreun</option>
		<option>--nopostun</option>
	</para><para>
	and turns off the execution of the corresponding
		<command>%pre</command>,
		<command>%post</command>,
		<command>%preun</command>, and
		<command>%postun</command>
	scriptlet(s).
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>--notriggers</option></term>
    <term><option>--notriggerin</option></term>
    <term><option>--notriggerun</option></term>
    <term><option>--notriggerpostun</option></term>
    <listitem><para>
	Don't execute any trigger scriptlet of the named type.
	The <option>--notriggers</option> option is equivalent to
	</para><para>
		<option>--notriggerin</option>
		<option>--notriggerun</option>
		<option>--notriggerpostun</option>
	</para><para>
	and turns off execution of the corresponding
		<command>%triggerin</command>,
		<command>%triggerun</command>, and
		<command>%triggerpostun</command>
	scriptlet(s).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--oldpackage</option></term>
    <listitem><para>
	Allow an upgrade to replace a newer package with an older one.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--percent</option></term>
    <listitem><para>
	Print percentages as files are unpacked from the package archive.
	This is intended to make &rpm; easy to run from
	other tools.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--prefix</option> <replaceable>NEWPATH</replaceable></term>
    <listitem><para>
	For relocateable binary packages, translate all file paths that
	start with the installation prefix in the package relocation hint(s)
	to <replaceable>NEWPATH</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--relocate</option> <replaceable>OLDPATH</replaceable>=<replaceable>NEWPATH</replaceable></term>
    <listitem><para>
	For relocatable binary packages, translate all file paths
	that start with <replaceable>OLDPATH</replaceable> in the
	package relocation hint(s) to <replaceable>NEWPATH</replaceable>.
	This option can be used repeatedly if several
	<replaceable>OLDPATH</replaceable>'s in the package are to
	be relocated.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--repackage</option></term>
    <listitem><para>
	Re-package the files before erasing. The previously installed
	package will be named according to the macro
		<command>%_repackage_name_fmt</command>
	and will be created in the directory named by
	the macro <command>%_repackage_dir</command> (default value
	is <filename>/var/tmp</filename>).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--replacefiles</option></term>
    <listitem><para>
	Install the packages even if they replace files from other,
	already installed, packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--replacepkgs</option></term>
    <listitem><para>
	Install the packages even if some of them are already installed
	on this system.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--test</option></term>
    <listitem><para>
	Do not install the package, simply check for and report
	potential conflicts.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
  </refsect2>

  <refsect2><title>Query Options</title>
    <para>
	The general form of an rpm query command is 
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-q|--query</option></arg
	<arg><synopfragmentref linkend="select-options">
	    select-options
	  </synopfragmentref></arg>
	<arg><synopfragmentref linkend="query-options">
	    query-options
	  </synopfragmentref></arg>
      </cmdsynopsis>
    </para>
 
    <para>
	You may specify the format that package information should be
	printed in. To do this, you use the
	<cmdsynopsis>
	<arg choice="req"><option>--qf|--queryformat</option></arg>
	<arg choice="plain"><replaceable>QUERYFMT</replaceable></arg>
	</cmdsynopsis>
	option, followed by the <replaceable>QUERYFMT</replaceable>
	format string.  Query formats are modifed versions of the
	standard <command>printf(3)</command> formatting. The format
	is made up of static strings (which may include standard C
	character escapes for newlines, tabs, and other special
	characters) and <command>printf(3)</command> type formatters.
	As &rpm; already knows the type to print, the
	type specifier must be omitted however, and replaced by the name
	of the header tag to be printed, enclosed by <command>{}</command>
	characters. Tag names are case insesitive, and the
	<command>RPMTAG_</command> portion of the tag name may be omitted
	as well.
    </para>
    <para>
	Alternate output formats may be requested by following
	the tag with <option>:<replaceable>typetag</replaceable></option>.
	Currently, the following types are supported:
		<command>octal</command>,
		<command>date</command>,
		<command>shescape</command>,
		<command>perms</command>,
		<command>fflags</command>, and
		<command>depflags</command>.
	For example, to print only the names of the packages queried,
	you could use <command>%{NAME}</command> as the format string.
	To print the packages name and distribution information in
	two columns, you could use <command>%-30{NAME}%{DISTRIBUTION}</command>.
	&rpm; will print a list of all of the tags it knows about when it
	is invoked with the <option>--querytags</option> argument.
    </para>
    <para>
	There are two subsets of options for querying: package selection,
	and information selection.
    </para>
  </refsect2>
  <refsect2><title>Package selection options:</title>
    <para>

    <variablelist>
    <varlistentry>
    <term><option><replaceable>PACKAGE_NAME</replaceable></option></term>
    <listitem><para>
	Query installed package named <replaceable>PACKAGE_NAME</replaceable>.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>-a, --all</option></term>
    <listitem><para>
	Query all installed packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-f, --file</option> <replaceable>FILE</replaceable></term>
    <listitem><para>
	Query package owning <replaceable>FILE</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-g, --group</option> <replaceable>GROUP</replaceable></term>
    <listitem><para>
	Query packages with the group of <replaceable>GROUP</replaceable>.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>-p, --package</option> <replaceable>PACKAGE_FILE</replaceable></term>
    <listitem><para>
	Query an (uninstalled) package <replaceable>PACKAGE_FILE</replaceable>.
	The <replaceable>PACKAGE_FILE</replaceable> may be specified
	as an <command>ftp</command> or <command>http</command> style URL, in
	which case the package header will be downloaded and queried.
	See <command>FTP/HTTP OPTIONS</command> for information on
		&rpm;'s internal
		<command>ftp</command> and
		<command>http</command>
	client support. The <replaceable>PACKAGE_FILE</replaceable> argument(s),
	if not a binary package, will be interpreted as an ASCII package
	manifest.  Comments are permitted, starting with a '#', and each
	line of a package manifest file may include white space seperated
	glob expressions, including URL's with remote glob expressions,
	that will be expanded to paths that are substituted in place of
	the package manifest as additional <replaceable>PACKAGE_FILE</replaceable>
	arguments to the query.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--querybynumber</option> <replaceable>NUMBER</replaceable></term>
    <listitem><para>
	Query the <replaceable>NUMBER</replaceable>th database entry
	directly; this is useful only for debugging.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--specfile</option> <replaceable>SPECFILE</replaceable></term>
    <listitem><para>
	Parse and query <replaceable>SPECFILE</replaceable> as if
	it were a package. Although not all the information (e.g. file lists)
	is available, this type of query permits rpm to be used to extract
	information from spec files without having to write a specfile
	parser.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--triggeredby</option> <replaceable>PACKAGE_NAME</replaceable></term>
    <listitem><para>
	Query packages that are triggered by package(s)
	<replaceable>PACKAGE_NAME</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--whatprovides</option> <replaceable>CAPABILITY</replaceable></term>
    <listitem><para>
	Query all packages that provide the <replaceable>CAPABILITY</replaceable> capability.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--whatrequires</option> <replaceable>CAPABILITY</replaceable></term>
    <listitem><para>
    Query all packages that requires <replaceable>CAPABILITY</replaceable> for proper functioning.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
  </refsect2>

  <refsect2><title>Package query options:</title>
    <para>
    <variablelist>
    <varlistentry>
    <term><option>--changelog</option></term>
    <listitem><para>
	Display change information for the package.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>-c, --configfiles</option></term>
    <listitem><para>
	List only configuration files (implies <option>-l</option>).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-d, --docfiles</option></term>
    <listitem><para>
	List only documentation files (implies <option>-l</option>).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--dump</option></term>
    <listitem><para>
	Dump file information as follows:
	</para>
	<blockquote><literallayout>
path size mtime md5sum mode owner group isconfig isdoc rdev symlink
	</literallayout></blockquote>
	<para>
	This option must be used with at least one of
		<option>-l</option>,
		<option>-c</option>,
		<option>-d</option>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--filesbypkg</option></term>
    <listitem><para>
	List all the files in each selected package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-i, --info</option></term>
    <listitem><para>
	Display package information, including name, version, and description.
	This uses the <option>--queryformat</option> if one was specified.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--last</option></term>
    <listitem><para>
	Orders the package listing by install time such that the latest
	packages are at the top.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-l, --list</option></term>
    <listitem><para>
	List files in package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--provides</option></term>
    <listitem><para>
	List capabilities this package provides.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-R, --requires</option></term>
    <listitem><para>
	List packages on which this package depends.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--scripts</option></term>
    <listitem><para>
	List the package specific scriptlet(s) that are used as part
	of the installation and uninstallation processes.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-s, --state</option></term>
    <listitem><para>
	Display the <replaceable>states</replaceable> of files in the package
	(implies <option>-l</option>).  The state of each file is one of
	<replaceable>normal</replaceable>,
	<replaceable>not installed</replaceable>, or
	<replaceable>replaced</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--triggers, --triggerscripts</option></term>
    <listitem><para>
	Display the trigger scripts, if any, which are contained in
	the package.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
  </refsect2>

  <refsect2><title>Verify Options</title>
    <para>
	The general form of an rpm verify command is 
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-V|--verify</option></arg>
	<arg><synopfragmentref linkend="select-options">
	    select-options
	  </synopfragmentref></arg>
	<arg><option>--nodeps</option></arg>
	<arg><option>--nofiles</option></arg>
	<arg><option>--nomd5</option></arg>
	<arg><option>--noscripts</option></arg>
      </cmdsynopsis>
    </para>
 
    <para>
	Verifying a package compares information about the installed files in
	the package with information about the files taken from the package
	metadata stored in the rpm database.  Among other things, verifying
	compares the size, MD5 sum, permissions, type, owner and group of
	each file.  Any discrepencies are displayed.
	Files that were not installed from the package, for example,
	documentation files excluded on installation using the
		"<option>--excludedocs</option>" option,
	will be silently ignored.
    </para>

    <para>
	The package selection options are the same as for package
	querying (including package manifest files as arguments).
	Other options that can be used only in verify mode are:
    <variablelist>
    <varlistentry>
    <term><option>--nodeps</option></term>
    <listitem><para>
	Don't verify dependencies.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--nofiles</option></term>
    <listitem><para>
	Don't verify files.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>--nomd5</option></term>
    <listitem><para>
	Don't verify file MD5 checksums.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noscripts</option></term>
    <listitem><para>
	Don't execute the <command>%verifyscript</command> scriptlet (if any).
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>

    <para>
	The format of the output is a string of 8 characters, a possible
	"<command>c</command>" denoting a configuration file, and then
	the file name. Each of the 8 characters denotes the result of
	a comparison of attribute(s) of the file to the value of those
	attribute(s) recorded in the database.
	A single
		"<command>.</command>" (period)
	means the test passed, while a single
		"<command>?</command>"
	indicates the test could not be performed (e.g. file permissions
	prevent reading). Otherwise, the (mnemonically
		em<command>B</command>oldened) character denotes failure of
	the corresponding <option>--verify</option> test:

	<simplelist>
	<member>
		<command>S</command>
		file <command>S</command>ize differs
	</member><member>
		<command>M</command>
		<command>M</command>ode differs (includes permissions and file type)
	</member><member>
		<command>5</command>
		MD<command>5</command> sum differs
	</member><member>
		<command>D</command>
		<command>D</command>evice major/minor number mis-match
	</member><member>
		<command>L</command>
		read<command>L</command>ink(2) path mis-match
	</member><member>
		<command>U</command>
		<command>U</command>ser ownership differs
	</member><member>
		<command>G</command>
		<command>G</command>roup ownership differs
	</member><member>
		<command>T</command>
		m<command>T</command>ime differs
	</member>
	</simplelist>
    </para>
  </refsect2>

  <refsect2><title>Signature Checking</title>
    <para>
	The general form of an rpm signature check command is 
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="plain"><option>--checksig</option></arg>
	<arg><option>--nogpg</option></arg>
	<arg><option>--nopgp</option></arg>
	<arg><option>--nomd5</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
      </cmdsynopsis>
    </para>

    <para>
	This checks the GPG signature of package
	<replaceable>PACKAGE_FILE</replaceable> to ensure
	its integrity and origin. GPG configuration information is
	read from configuration files.  See the section on GPG SIGNATURES
	for details.
    </para>
  </refsect2>

  <refsect2><title>Erase Options</title>
    <para>
	The general form of an rpm erase command is 
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-e|--erase</option></arg>
	<arg><option>--allmatches</option></arg>
	<arg><option>--nodeps</option></arg>
	<arg><option>--noscripts</option></arg>
	<arg><option>--notriggers</option></arg>
	<arg><option>--repackage</option></arg>
	<arg><option>--test</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_NAME</replaceable></arg>
      </cmdsynopsis>
    </para>

    <para>
	The following options may also be used:
    </para>
    <variablelist>
    <varlistentry>
    <term><option>--allmatches</option></term>
    <listitem><para>
	Remove all versions of the package which match
	<replaceable>PACKAGE_NAME</replaceable>. Normally an
	error is issued if <replaceable>PACKAGE_NAME</replaceable>
	matches multiple packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--nodeps</option></term>
    <listitem><para>
	Don't check dependencies before uninstalling the packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noscripts</option></term>
    <term><option>--nopreun</option></term>
    <term><option>--nopostun</option></term>
    <listitem><para>
	Don't execute the scriptlet of the same name.
	The <option>--noscripts</option> option during package erase is
	equivalent to
	</para><para>
		<option>--nopreun</option>
		<option>--nopostun</option>
	</para><para>
	and turns off the execution of the corresponding
		<command>%preun</command>, and
		<command>%postun</command>
	scriptlet(s).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--notriggers</option></term>
    <term><option>--notriggerun</option></term>
    <term><option>--notriggerpostun</option></term>
    <listitem><para>
	Don't execute any trigger scriptlet of the named type.
	The <option>--notriggers</option> option is equivalent to
	</para><para>
		<option>--notriggerun</option>
		<option>--notriggerpostun</option>
	</para><para>
	and turns off execution of the corresponding
		<command>%triggerun</command>, and
		<command>%triggerpostun</command>
	scriptlet(s).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--repackage</option></term>
    <listitem><para>
	Re-package the files before erasing. The previously installed
	package will be named according to the macro
		<command>%_repackage_name_fmt</command>
	and will be created in the directory named by
	the macro <command>%_repackage_dir</command> (default value
	is <filename>/var/tmp</filename>).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--test</option></term>
    <listitem><para>
	Don't really uninstall anything, just go through the motions.
	Useful in conjunction with the <option>-vv</option> option
	for debugging.
    </para></listitem>
    </varlistentry>
    </variablelist>
  </refsect2>

  <refsect2><title>Build Options</title>
    <para>
	The general form of an rpm build command is 
    </para>
    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>-b<replaceable>STAGE</replaceable>|-t<replaceable>STAGE</replaceable></option></arg>
	<arg><synopfragmentref linkend="build-options">
	    build-options
	  </synopfragmentref></arg>
	<arg rep="repeat" choice="plain"><replaceable>FILE</replaceable></arg>
      </cmdsynopsis>
    </para>

    <para>
	The argument used is <option>-b</option> if a spec file is being
	used to build the package and <option>-t</option> if &rpm;
	should look inside of a (possibly compressed) tar file for
	the spec file to use. After the first argument, the next
	character (<replaceable>STAGE</replaceable>) specifies the stages
	of building and packaging to be done and is one of:
    <variablelist>
    <varlistentry>
    <term><option>-ba</option></term>
    <listitem><para>
	Build binary and source packages (after doing the %prep, %build, and
	%install stages).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bb</option></term>
    <listitem><para>
	Build a binary package (after doing the %prep, %build, and %install
	stages).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bp</option></term>
    <listitem><para>
	Executes the "%prep" stage from the spec file. Normally this
	involves unpacking the sources and applying any patches.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bc</option></term>
    <listitem><para>
	Do the "%build" stage from the spec file (after doing the %prep stage).
	This generally involves the equivalent of a "make".
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bi</option></term>
    <listitem><para>
	Do the "%install" stage from the spec file (after doing the %prep and
	%build stages).  This generally involves the equivalent of a
	"make install".
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bl</option></term>
    <listitem><para>
	Do a "list check".  The "%files" section from the spec file is
	macro expanded, and checks are made to verify that each file
	exists.
	</para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bs</option></term>
    <listitem><para>
	Build just the source package.
    </para></ListItem>
    </varlistentry>
    </variablelist>
    </para>

    <para>
	The following options may also be used:
    </para>
  <variablelist>
  <varlistentry>
    <term><option>--buildroot</option> <replaceable>DIRECTORY</replaceable></term>
    <listitem><para>
	When building a package, override the BuildRoot tag with directory
	<replaceable>DIRECTORY</replaceable>.
    </para></listitem>
  </varlistentry><varlistentry>
    <term><option>--clean</option></term>
    <listitem><para>
	Remove the build tree after the packages are made.
    </para></listitem>
  </varlistentry><varlistentry>
    <term><option>--rmsource</option></term>
    <listitem><para>
	Remove the sources after the build (may also be
	used standalone, e.g. "&rpm; <option>--rmsource foo.spec</option>").
    </para></listitem>
  </varlistentry><varlistentry>
    <term><option>--rmspec</option></term>
    <listitem><para>
	Remove the spec file after the build (may also be
	used standalone, eg. "&rpm; <option>--rmspec foo.spec</option>").
    </para></listitem>
  </varlistentry><varlistentry>
    <term><option>--short-circuit</option></term>
    <listitem><para>
	Skip straight to specified stage (i.e., skip all stages leading
	up to the specified stage).  Only valid with <option>-bc</option>
	and <option>-bi</option>.
    </para></listitem>
  </varlistentry><varlistentry>
    <term><option>--sign</option></term>
    <listitem><para>
	Embed a GPG signature in the package. This signature can be used
	to verify the integrity and the origin of the package.  See the
	section on GPG SIGNATURES for configuration details.
    </para></listitem>
  </varlistentry><varlistentry>
    <term><option>--target</option> <replaceable>PLATFORM</replaceable></term>
    <listitem><para>
	When building the package, interpret <replaceable>PLATFORM</replaceable>
	as <option>arch-vendor-os</option> and set the macros
		<command>%_target</command>,
		<command>%_target_arch</command>, and
		<command>%_target_os</command>
	accordingly.
    </para></listitem>
  </varlistentry><varlistentry>
    <term><option>--test</option></term>
    <listitem><para>
	Do not execute any build stages. Useful for testing out spec files.
    </para></listitem>
  </varlistentry>
  </variablelist>
  </refsect2>

  <refsect2><title>Rebuild and Recompile Options</title>
    <para>
	There are two other ways to invoke building with rpm:
    </para>
    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--rebuild|--recompile</option></arg>
	<arg rep="repeat" choice="plain"<replaceable>SOURCEPKG</replaceable></arg>
      </cmdsynopsis>
    </para>
    <para>
	When invoked this way, &rpm; installs the named source
	package, and does a prep, compile and install.  In addition,
	<option>--rebuild</option> builds a new binary package. When the build
	has completed, the build directory is removed (as in
	<option>--clean</option>) and the the sources and spec file for
	the package are removed.
    </para>
  </refsect2>

  <refsect2><title>Signing a Package</title>
    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--addsign|--resign</option></arg>
	<arg rep="repeat" choice="plain"><replaceable>PACKAGE_FILE</replaceable></arg>
      </cmdsynopsis>
    </para>
    <para>
	The <option>--addsign</option> option generates and inserts
	new signatures for each package.  Any existing signatures will
	be discarded.
    </para>
    <para>
	The <option>--resign</option> option generates and appends signatures
	for the listed packages while preserving the existing signatures.
    </para>
  </refsect2>

  <refsect2><title>GPG Signatures</title>
    <para>
	In order to use the signature feature, &rpm;
	must be configured to run GPG and be able to find a public key
	ring with Red Hat (or other vendor) public keys. By default,
	&rpm; uses the same conventions as GPG
	to find key rings, namely the <envar>$GPGPATH</envar> environment
	variable.  If your key rings are not located where GPG expects
	them to be, you will need to configure the macro
		<command>%_gpg_path</command>
	to be the location of the GPG key rings to use.
    </para>

    <para>
	If you want to be able to sign packages you create yourself, you
	also need to create your own public and secret key pair (see the
	GPG manual). You will also need to configure the macros
    <variablelist>
    <varlistentry>
    <term><command>%_signature</command></term>
    <listitem><para>
	The signature type.  Right now only gpg and pgp are supported.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><command>%_gpg_name</command></term>
    <listitem><para>
	The name of the "user" whose key you wish to use to sign your packages.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>

    <para>
	When building packages you then add <option>--sign</option> to
	the command line. You will be prompted for your pass phrase, and
	your package will be built and signed.  For example, to be able
	to use GPG to sign packages as the user
	<replaceable>"John Doe &lt;jdoe@foo.com&gt;"</replaceable>
	from the key rings located in <filename>/etc/rpm/.gpg</filename>
	using the executable <filename>/usr/bin/gpg</filename> you would include
    </para>
    <para>
<computeroutput>
%_signature gpg
%_gpg_path /etc/rpm/.gpg
%_gpg_name John Doe &lt;jdoe@foo.com&gt;
%_gpgbin /usr/bin/gpg
</computeroutput>
    </para>
    <para>
	in a macro configuration file. Use <filename>/etc/rpm/macros</filename>
	for per-system configuration and <filename>~/.rpmmacros</filename>
	for per-user configuration. 
    </para>
  </refsect2>

  <refsect2><title>Rebuild Database Options</title>
    <para>
	The general form of an rpm rebuild database command is 
    </para>

    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="req"><option>--initdb|--rebuilddb</option></arg>
	<arg><option>-v</option></arg>
	<arg><option>--dbpath</option> <replaceable>DIRECTORY</replaceable></arg>
	<arg><option>--root</option> <replaceable>DIRECTORY</replaceable></arg>
      </cmdsynopsis>
    </para>
 
    <para>
	Use <option>--initdb</option> to create a new database, use
	<option>--rebuilddb</option> to rebuild the database indices from
	the installed package headers.
    </para>
  </refsect2>

  <refsect2><title>Showrc</title>
    <para>
	The command
    </para>
  
    <para>
      <cmdsynopsis>
	&rpm;
	<arg choice="plain"><option>--showrc</option></arg>
      </cmdsynopsis>
    </para>

    <para>
	shows the values &rpm; will use for all of the
	options are currently set in
		<filename>rpmrc</filename> and
		<filename>macros</filename>
	configuration file(s).
    </para>
  </refsect2>

  <refsect2><title>Ftp/Http Options</title>
    <para>
	&rpm; can act as an FTP and/or HTTP client so
	that packages can be queried or installed from the internet.
	Package files for install, upgrade, and query operations may be
	specified as an
		<command>ftp</command> or
		<command>http</command>
	style URL:  
    </para>

    <para>
	ftp://USER:PASSWORD@HOST:PORT/path/to/package.rpm
    </para>
 
    <para>
	If the <command>:PASSWORD</command> portion is omitted, the password will be
	prompted for (once per user/hostname pair). If both the user and
	password are omitted, anonymous <command>ftp</command> is used.
	In all cases, passive (PASV) <command>ftp</command> transfers are
	performed.
    </para>
    <para>
	&rpm; allows the following options to be used with
	ftp URLs:
    <variablelist>
    <varlistentry>
    <term><option>--ftpproxy</option> <replaceable>HOST</replaceable></term>
    <listitem><para>
	The host <replaceable>HOST</replaceable> will be used as a proxy server
	for all ftp transfers, which allows users to ftp through firewall
	machines which use proxy systems. This option may also be specified
	by configuring the macro <command>%_ftpproxy</command>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ftpport</option> <replaceable>HOST</replaceable></term>
    <listitem><para>
	The TCP <replaceable>PORT</replaceable> number to use for
	the ftp connection on the proxy ftp server instead of the default
	port. This option may also be specified by configuring the macro
	<command>%_ftpport</command>.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>

    <para>
	&rpm; allows the following options to be used with
	<command>http</command> URLs:
    <variablelist>
    <varlistentry>
    <term><option>--httpproxy</option> <replaceable>HOST</replaceable></term>
    <listitem><para>
	The host <replaceable>HOST</replaceable> will be used as
	a proxy server for all <command>http</command> transfers. This
	option may also be specified by configuring the macro
	<command>%_httpproxy</command>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--httpport</option> <replaceable>PORT</replaceable></term>
    <listitem><para>
	The TCP <replaceable>PORT</replaceable> number to use for the
	<command>http</command> connection on the proxy http server instead
	of the default port. This option may also be specified by configuring
	the macro <command>%_httpport</command>.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
  </refsect2>

</refsect1>

<refsect1><title>Files</title>
    <para>
    <simplelist>
	<member><filename>/usr/lib/rpm/rpmrc</filename></member>
	<member><filename>/etc/rpmrc</filename></member>
	<member><filename>~/.rpmrc</filename></member>
	<member><filename>/usr/lib/rpm/macros</filename></member>
	<member><filename>/etc/rpm/macros</filename></member>
	<member><filename>~/.rpmmacros</filename></member>
	<member><filename>/var/lib/rpm/Conflictname</filename></member>
	<member><filename>/var/lib/rpm/Basenames</filename></member>
	<member><filename>/var/lib/rpm/Group</filename></member>
	<member><filename>/var/lib/rpm/Name</filename></member>
	<member><filename>/var/lib/rpm/Packages</filename></member>
	<member><filename>/var/lib/rpm/Providename</filename></member>
	<member><filename>/var/lib/rpm/Requirename</filename></member>
	<member><filename>/var/lib/rpm/Triggername</filename></member>
	<member><filename>/var/tmp/rpm*</filename></member>
    </simplelist>
    </para>
</refsect1>

<refsect1><title>See Also</title>
    <simplelist>
      <member><command>popt</command>(3),</member>
      <member><command>rpm2cpio</command>(8),</member>
      <member>
	<command>
	<ulink URL="http://www.rpm.org/">http://www.rpm.org/</ulink>
	</command>
      </member>
    </simplelist>
</refsect1>

<refsect1><title>Authors</title>
      <simplelist>
	<member>Marc Ewing &lt;marc@redhat.com&gt;</member>
	<member>Jeff Johnson &lt;jbj@redhat.com&gt;</member>
	<member>Erik Troan &lt;ewt@redhat.com&gt;</member>
      </simplelist>
</refsect1>

  </RefEntry>
</reference>
