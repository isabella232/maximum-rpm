<appendix id="ch-rpm-manpage">

  <title>rpm.8 Man Page</title>

<!-- rpm - Red Hat Package Manager -->
<!-- I am looking for help to finish SGML.  -->
<!-- manual page source format generated by PolyglotMan v3.0.8+XFree86
     available via anonymous ftp from
	ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z
-->

<RefEntry ID=rpm.8>
  <RefMeta>
    <RefEntryTitle>rpm</RefEntryTitle>
    <ManVolNum>8</ManVolNum>
  </RefMeta>

<RefNameDiv>
  <RefName>rpm</RefName>
  <RefPurpose>RPM Package Manager</RefPurpose>
</RefNameDiv>

<RefSynopsisDiv><Title>Synopsis</Title>
  <cmdsynopsis>
    &rpm; <arg><replaceable>[options]</replaceable></arg>
  </cmdsynopsis>
</RefSynopsisDiv>

<RefSect1><Title>Description</Title>
  <para>
	&rpm; is a powerful <Glossterm>package manager</Glossterm>,
	which can be used to build, install, query, verify, update, and
	erase individual software packages.  A <Glossterm>package</Glossterm> consists
	of an archive of files, and package information, including name,
	version, and description.
  </para>

  <para>
    One of the following basic modes must be selected:
    <simplelist>
	<member><Glossterm>Initialize Database</Glossterm>,</member>
	<member><Glossterm>Rebuild Database</Glossterm>,</member>
	<member><Glossterm>Build Package</Glossterm>,</member>
	<member><Glossterm>Recompile Package</Glossterm>,</member>
	<member><Glossterm>Build Package from Tarball</Glossterm>,</member>
	<member><Glossterm>Query</Glossterm>,</member>
	<member><Glossterm>Show Querytags</Glossterm>,</member>
	<member><Glossterm>Install/Upgrade/Freshen</Glossterm>,</member>
	<member><Glossterm>Uninstall</Glossterm>,</member>
	<member><Glossterm>Verify</Glossterm>,</member>
	<member><Glossterm>Signature Check</Glossterm>,</member>
	<member><Glossterm>Resign</Glossterm>,</member>
	<member><Glossterm>Add Signature</Glossterm>,</member>
	<member><Glossterm>Set Owners/Groups</Glossterm>, and</member>
	<member><Glossterm>Show Configuration</Glossterm>.</member>
    </simplelist>
  </para>

  <para>Database maintenance:
    <simplelist>
	<member>&rpm; <option>--initdb</option></member>
	<member>&rpm; <option>--rebuilddb</option></member>
    </simplelist>
  </para>
  <para>Building:
    <simplelist>
	<member>&rpm; <option>[-b|t]</option> [buildoptions] [specfile]+</member>
	<member>&rpm; <option>--rebuild</option> [sourcerpm]+</member>
	<member>&rpm; <option>--tarbuild</option> [tarredsource]+</member>
    </simplelist>
  </para>
  <para>Querying:
    <simplelist>
	<member>&rpm; <option>[--query|-q]</option> [queryoptions]</member>
	<member>&rpm; <option>--querytags</option></member>
    </simplelist>
  </para>
  <para>Maintaining installed packages:
    <simplelist>
	<member>&rpm; <option>[--install|-i]</option> [installoptions] [package_file]+</member>
	<member>&rpm; <option>[--upgrade|-U]</option> [installoptions] [package_file]+</member>
	<member>&rpm; <option>[--freshen|-F]</option> [installoptions] [package_file]+</member>
	<member>&rpm; <option>[--uninstall|-e]</option> [uninstalloptions] [package]+</member>
	<member>&rpm; <option>[--verify|-V]</option> [verifyoptions] [package]+</member>
    </simplelist>
  </para>
  <para>Signatures:
    <simplelist>
	<member>&rpm; <option>[--checksig|-K]</option> [signatureoptions] [package_file]+</member>
	<member>&rpm; <option>--resign</option> [package_file]+</member>
	<member>&rpm; <option>--addsign</option> [package_file]+</member>
    </simplelist>
  </para>
  <para>Miscellaneous:
    <simplelist>
	<member>&rpm; <option>--showrc</option></member>
	<member>&rpm; <option>--setperms</option> [package]+</member>
	<member>&rpm; <option>--setgids</option> [package]+</member>
    </simplelist>
  </para>
</RefSect1>

<RefSect1><Title>General Options</Title>
  <para>
  These options can be used in all the different modes.
  </para>
  <variablelist>
    <varlistentry>
    <term><option>-vv</option></term>
      <listitem><para>
	Print lots of ugly debugging information.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--quiet</option></term>
      <listitem><para>
	Print as little as possible - normally only error messages will
	be displayed.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--help</option></term>
      <listitem><para>
	Print a longer usage message then normal.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--version</option></term>
      <listitem><para>
	Print a single line containing the version number of &rpm;
	being used. </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--rcfile</option> <replaceable>&lt;filelist&gt;</replaceable></term>
      <listitem><para>
	Each of the files in the colon separated <replaceable>&lt;filelist&gt;</replaceable>
	is read sequentially by &rpm; for configuration information. The
	default <replaceable>&lt;filelist&gt;</replaceable> is
		<filename>/usr/lib/rpm/rpmrc</filename>:<filename>/etc/rpmrc</filename>:<filename>~/.rpmrc</filename>.
	Only the first file in the list must exist, and tildes will be
	expanded to the value of <envar>$HOME</envar>.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--root <replaceable>&lt;dir&gt;</replaceable></option></term>
      <listitem><para>
	Use the system rooted at <replaceable>&lt;dir&gt;</replaceable> for all operations.
	Note that this means the database will be read or modified under
	<replaceable>&lt;dir&gt;</replaceable> and any <command>%pre</command> or <command>%post</command> scripts are
	run after a chroot() to <replaceable>&lt;dir&gt;</replaceable>.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--dbpath <replaceable>&lt;path&gt;</replaceable></option></term>
      <listitem><para>
	Use RPM database in <replaceable>&lt;path&gt;</replaceable>.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--justdb</option></term>
      <listitem><para>
	Update only the database, not the filesystem.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ftpproxy <replaceable>&lt;host&gt;</replaceable></option>,</term>
    <listitem><para>
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--httpproxy <replaceable>&lt;host&gt;</replaceable></option></term>
      <listitem><para>
	Use <replaceable>&lt;host&gt;</replaceable> as an FTP or HTTP proxy host. See
	<Command>FTP/HTTP OPTIONS</Command>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ftpport <replaceable>&lt;port&gt;</replaceable></option>,</term>

    <listitem><para>
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--httpport <replaceable>&lt;port&gt;</replaceable></option></term>
      <listitem><para>
	Use <replaceable>&lt;port&gt;</replaceable> as the FTP or HTTP port on the proxy
	host. See <Command>FTP/HTTP OPTIONS</Command>.
      </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--pipe <replaceable>&lt;cmd&gt;</replaceable></option></term>
      <listitem><para>
	Pipes the output of &rpm; to the command <replaceable>&lt;cmd&gt;</replaceable>.
      </para></listitem>
    </varlistentry>
  </variablelist>
</RefSect1>

    <RefSect1> <Title>Install and Upgrade Options</Title>
    <para>
	The general form of an rpm install command is 
    </para>

    <para>
	&rpm; -i [install-options] <replaceable>&lt;package_file&gt;+</replaceable>
    </para>

    <para>
	This installs a new package.
    </para>
    <para>
	The general form of an rpm upgrade command is 
    </para>

    <para>
	&rpm; -U [install-options] <replaceable>&lt;package_file&gt;+</replaceable>
    </para>
 
    <para>
	This upgrades or installs the package currently installed
	to the version in the new RPM.  This is the same as install,
	except all other version of the package are removed from the
	system.
    </para>

    <para>
	&rpm; [-F|--freshen] [install-options] <replaceable>&lt;package_file&gt;+</replaceable>
    </para>

    <para>
	This will upgrade packages, but only if an earlier version
	currently exists. The <replaceable>&lt;package_file&gt;</replaceable>
	may be specified as an ftp or <Command>http</Command> URL,
	in which case the package will be downloaded before being
	installed. See <Command>FTP/HTTP OPTIONS</Command>
	for information on RPM's built-in <Command>ftp</Command>
	and <Command>http</Command> support. 
    </para>

    <para>
    <variablelist>
    <varlistentry>
    <term><option>--force</option></term>
    <listitem><para>
	Same as using
	<option>--replacepkgs</option>,
	<option>--replacefiles</option>, and
	<option>--oldpackage</option>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--hash|-h]</option></term>
    <listitem><para>
	Print 50 hash marks as the package archive is unpacked.
	Use with <option>-v</option> for a nicer display.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--oldpackage</option></term>
    <listitem><para>
	Allow an upgrade to replace a newer package with an older one.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--percent</option></term>
    <listitem><para>
	Print percentages as files are unpacked from the package archive.
	This is intended to make RPM easy to run from other tools.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--replacefiles</option></term>
    <listitem><para>
	Install the packages even if they replace files from other,
	already installed, packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--replacepkgs</option></term>
    <listitem><para>
	Install the packages even if some of them are already installed
	on this system.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--allfiles</option></term>
    <listitem><para>
	Installs or upgrades all the missingok files in the package,
	regardless if they exist.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--nodeps</option></term>
    <listitem><para>
	Don't do a dependency check before installing or upgrading
	a package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noscripts</option></term>
    <listitem><para>
	Don't execute the preinstall or postinstall scripts.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>--notriggers</option></term>
    <listitem><para>
	Don't execute scripts which are triggered by the installation
	of this package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ignoresize</option></term>
    <listitem><para>
	Don't check mount file systems for sufficient disk space before
	installing this package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--excludepath <replaceable>&lt;path&gt;</replaceable></option></term>
    <listitem><para>
	Don't install files whose name begins with
	<replaceable>&lt;path&gt;</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--excludedocs</option></term>
    <listitem><para>
	Don't install any files which are marked as documentation
	(which includes man pages and texinfo documents).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--includedocs</option></term>
    <listitem><para>
	Install documentation files. This is the default behavior.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--test</option></term>
    <listitem><para>
	Do not install the package, simply check for and report
	potential conflicts.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ignorearch</option></term>
    <listitem><para>
	This allows installation or upgrading even if the architectures
	of the binary RPM and host don't match.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ignoreos</option></term>
    <listitem><para>
	This allows installation or upgrading even if the operating
systems of the binary RPM and host don't match.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--prefix <replaceable>&lt;path&gt;</replaceable></option></term>
    <listitem><para>
	This sets the installation prefix to
	<replaceable>&lt;path&gt;</replaceable> for relocatable packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--relocate</option> <replaceable>&lt;oldpath&gt;</replaceable>=<replaceable>&lt;newpath&gt;</replaceable></term>
    <listitem><para>
	For relocatable packages, translates the files that would be
	put in <replaceable>&lt;oldpath&gt;</replaceable> to
	<replaceable>&lt;newpath&gt;</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--badreloc</option></term>
    <listitem><para>
	To be used in conjunction with --relocate, this forces
	the relocation even if the package isn't relocatable.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noorder</option></term>
    <listitem><para>
	Don't reorder the packages for an install. The list of
	packages would normally be reordered to satisfy dependancies.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
    </RefSect1>

<RefSect1><Title>Query Options</Title>
    <para>
	The general form of an rpm query command is 
    </para>

    <para>
	&rpm; -q [query-options]
    </para>
 
    <para>
	You may specify the format that package information should be
	printed in. To do this, you use the <option>[--queryformat|-qf]</option>
	option, followed by the format string.  Query formats are
	modifed versions of the standard <Command>printf(3)</Command>
	formatting.  The format is made up of static strings (which
	may include standard C character escapes for newlines, tabs,
	and other special characters) and <Command>printf(3)</Command>
	type formatters. As &rpm; already knows the type to print, the
	type specifier must be omitted however, and replaced by the name
	of the header tag to be printed, enclosed by <Command>{}</Command>
	characters. The  <Command>RPMTAG_</Command> portion of the tag name
	may be omitted.  Alternate output formats may be requested by following
	the tag with <option>:<replaceable>typetag</replaceable></option>.
	Currently, the following types are supported:
		<Command>octal</Command>,
		<Command>date</Command>,
		<Command>shescape</Command>,
		<Command>perms</Command>,
		<Command>fflags</Command>, and
		<Command>depflags</Command>.
	For example, to print only the names of the packages queried,
	you could use <Command>%{NAME}</Command> as the format string.
	To print the packages name and distribution information in
	two columns, you could use <Command>%-30{NAME}%{DISTRIBUTION}</Command>.
	&rpm; will print a list of all of the tags it knows about when it
	is invoked with the <option>--querytags</option> argument.
    </para>
    <para>
	There are two subsets of options for querying: package selection,
	and information selection. Package selection options:

    <variablelist>
    <varlistentry>
    <term><option><replaceable>&lt;package_name&gt;</replaceable></option></term>
    <listitem><para>
	Query installed package named <replaceable>&lt;package_name&gt;</replaceable>.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>[--all|-a]</option></term>
    <listitem><para>
	Query all installed packages
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--whatrequires <replaceable>&lt;capability&gt;</replaceable></option></term>
    <listitem><para>
    Query all packages that requires <replaceable>&lt;capability&gt;</replaceable> for proper functioning.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--whatprovides <replaceable>&lt;virtual&gt;</replaceable></option></term>
    <listitem><para>
	Query all packages that provide the <replaceable>&lt;virtual&gt;</replaceable> capability.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--file|-f] <replaceable>&lt;file&gt;</replaceable></option></term>
    <listitem><para>
	Query package owning <replaceable>&lt;file&gt;</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--group|-g] <replaceable>&lt;group&gt;</replaceable></option></term>
    <listitem><para>
	Query packages with the group of <replaceable>&lt;group&gt;</replaceable>.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>-p <replaceable>&lt;package_file&gt;</replaceable></option></term>
    <listitem><para>
	Query an (uninstalled) package <replaceable>&lt;package_file&gt;</replaceable>.
	The <replaceable>&lt;package_file&gt;</replaceable> may be specified
	as an <Command>ftp</Command> or <Command>http</Command> style URL, in
	which case the package header will be downloaded and queried.
	See <Command>FTP/HTTP OPTIONS</Command> for information on RPM's
	built-in <Command>ftp</Command> and <Command>http</Command> client
	support. The &lt;package_file&gt; argument(s), if not an rpm package,
	will be interpreted as an ASCII package manifest. Comments are
	permitted, starting with a '#', and each line of the package manifest
	file includes white space seperated glob expressions, including URL's
	with remote glob expressions, that will be expanded to paths that
	are substituted in place of the package manifest as
	<replaceable>&lt;package_file&gt;</replaceable> arguments to the query.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--specfile <replaceable>&lt;specfile&gt;</replaceable></option></term>
    <listitem><para>
	Parse and query <replaceable>&lt;specfile&gt;</replaceable> as if
	it were a package. Although not all the information (e.g. file lists)
	is available, this type of query permits rpm to be used to extract
	information from spec files without having to write a specfile
	parser.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--querybynumber <replaceable>&lt;num&gt;</replaceable></option></term>
    <listitem><para>
	Query the <replaceable>&lt;num&gt;</replaceable>th database entry
	directly; this is helpful for debugging  purposes.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--triggeredby <replaceable>&lt;pkg&gt;</replaceable></option></term>
    <listitem><para>
	Query packages that are triggered by packages
	<replaceable>&lt;pkg&gt;</replaceable>.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>


    <para>
	Information selection options:
    <variablelist>
    <varlistentry>
    <term><option>-i</option></term>
    <listitem><para>
	Display package information, including name, version, and description.
	This uses the <option>--queryformat</option> if one was specified.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--requires|-R]</option></term>
    <listitem><para>
	List packages on which this package depends.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--provides</option></term>
    <listitem><para>
	List capabilities this package provides.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--changelog</option></term>
    <listitem><para>
	Display change information for the package.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>[--list|-l]</option></term>
    <listitem><para>
	List files in package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--state|-s]-s</option></term>
    <listitem><para>
	Display the <replaceable>states</replaceable> of files in the package
	(implies <option>-l</option>).  The state of each file is one of
	<replaceable>normal</replaceable>,
	<replaceable>not installed</replaceable>, or
	<replaceable>replaced</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--docfiles|-d]</option></term>
    <listitem><para>
	List only documentation files (implies <option>-l</option>).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--configfiles|-c]</option></term>
    <listitem><para>
	List only configuration files (implies <option>-l</option>).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--scripts</option></term>
    <listitem><para>
	List the package specific shell scripts that are used as part
	of the  installation and uninstallation processes, if there are
	any.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>[--triggers|--triggerscripts]</option></term>
    <listitem><para>
	Display the trigger scripts, if any, which are contained in
	the package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--dump</option></term>
    <listitem><para>
	Dump file information as follows:
	    path size mtime md5sum mode owner group isconfig isdoc rdev symlink.
	This must be used with at least one of
		<option>-l</option>,
		<option>-c</option>,
		<option>-d</option>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--last</option></term>
    <listitem><para>
	Orders the package listing by install time such that the latest
	packages are at the top.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--filesbypkg</option></term>
    <listitem><para>
	This lists all the files in each package.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
    </RefSect1>

    <RefSect1><Title>Verify Options</Title>
    <para>
	The general form of an rpm verify command is 
    </para>

    <para>
	&rpm; -V|-y|--verify [verify-options]
    </para>
 
    <para>
	Verifying a package compares information about the installed files in
	the package with information about the files taken from the original
	package and stored in the rpm database.  Among other things, verifying
	compares the size, MD5 sum, permissions, type, owner and group of
	each file.  Any discrepencies are displayed.  The package
	specification options are the
	same as for package querying (including package manifest files as
	arguments).  Files that were not installed from the package, for
	example documentation files excluded on installation using the
	"<option>--excludedocs</option>" option, will be silently ignored.
	Options that can be used in verify mode:
    <variablelist>
    <varlistentry>
    <term><option>--nodeps</option></term>
    <listitem><para>
	Don't verify dependencies.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--nofiles</option></term>
    <listitem><para>
	Don't verify files.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>--nomd5</option></term>
    <listitem><para>
	Don't verify file MD5 checksums.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noscripts</option></term>
    <listitem><para>
	Don't execute the verify script (if any).  The format of the
	output is a string of 8 characters, a possible "<Command>c</Command>"
	denoting a configuration file, and then the file name. Each of
	the 8 characters denotes the result of a comparison of one
	attribute of the file to the value of that attribute recorded
	in the RPM database.  A  single "<Command>.</Command>" (period)
	means the test passed, while a single "<Command>?</Command>"
	indicates the test could not be performed (e.g. file permissions
	prevent reading). The following characters denote failure of
	certain tests:
    </para></listitem>
    </varlistentry>
    </variablelist>

    <variablelist>
    <varlistentry>
    <term><Command>5</Command></term>
    <listitem><para>
	MD5 sum
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><Command>S</Command></term>
    <listitem><para>
	File size
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><Command>L</Command></term>
    <listitem><para>
	Symlink
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><Command>T</Command></term>
    <listitem><para>
	Mtime
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><Command>D</Command></term>
    <listitem><para>
	Device
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><Command>U</Command></term>
    <listitem><para>
	User
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><Command>G</Command></term>
    <listitem><para>
	Group
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><Command>M</Command></term>
    <listitem><para>
	Mode (includes permissions and file type)
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
    </RefSect1>

    <RefSect1><Title>Signature Checking</Title>
    <para>
	The general form of an rpm signature check command is 
    </para>

    <para>
	&rpm; --checksig <replaceable>&lt;package_file&gt;+</replaceable>
    </para>

    <para>
	This checks the PGP signature of package
	<replaceable>&lt;package_file&gt;</replaceable> to ensure
	its integrity and origin. PGP configuration information is
	read from configuration files.  See the section on PGP SIGNATURES
	for details.
    </para>
    </RefSect1>

    <RefSect1><Title>Uninstall Options</Title>
    <para>
	The general form of an rpm uninstall command is 
    </para>

    <para>
	&rpm; -e <replaceable>&lt;package_name&gt;+</replaceable>
    </para>

    <para>
    <variablelist>
    <varlistentry>
    <term><option>--allmatches</option></term>
    <listitem><para>
	Remove all versions of the package which match
	<replaceable>&lt;package_name&gt;</replaceable>. Normally an
	error is issued if <replaceable>&lt;package_name&gt;</replaceable>
	matches multiple packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--noscripts</option></term>
    <listitem><para>
	Don't execute the preuninstall or postuninstall scripts.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--notriggers</option></term>
    <listitem><para>
	Don't execute scripts which are triggered by the removal of
	this package.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--nodeps</option></term>
    <listitem><para>
	Don't check dependencies before uninstalling the packages.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--test</option></term>
    <listitem><para>
	Don't really uninstall anything, just go through the motions.
	Useful in conjunction with the <option>-vv</option> option.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>
    </RefSect1>

    <RefSect1><Title>Build Options</Title>
    <para>
	The general form of an rpm build command is 
    </para>
    <para>
	&rpm; <option>-[b|t]<replaceable>O</replaceable></option> [build-options] <replaceable>&lt;package_spec&gt;+</replaceable>
    </para>

    <para>
	The argument used is <option>-b</option> if a spec file is being
	used to build the package and <option>-t</option> if &rpm;
	should look inside of a (possibly compressed) tar file for
	the spec file to use. After the first argument, the next
	argument (<replaceable>O</replaceable>) specifies the stages
	of building and packaging to be done and is one of:
    <variablelist>
    <varlistentry>
    <term><option>-bp</option></term>
    <listitem><para>
	Executes the "%prep" stage from the spec file. Normally this
	involves unpacking the sources and applying any patches.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bl</option></term>
    <listitem><para>
	Do a "list check".  The "%files" section from the spec file is
	macro expanded, and checks are made to verify that each file
	exists.
	</para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bc</option></term>
    <listitem><para>
	Do the "%build" stage from the spec file (after doing the %prep stage).
	This generally involves the equivalent of a "make".
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bi</option></term>
    <listitem><para>
	Do the "%install" stage from the spec file (after doing the %prep and
	%build stages).  This generally involves the equivalent of a
	"make install".
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bb</option></term>
    <listitem><para>
	Build a binary package (after doing the %prep, %build, and %install
	stages).
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>-bs</option></term>
    <listitem><para>
	Build just the source package.
    </para></ListItem>
    </varlistentry><varlistentry>
    <term><option>-ba</option></term>
    <listitem><para>
	Build binary and source packages (after doing the %prep, %build, and
	%install stages).
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>

    <para>
	The following options may also be used:
    </para>
    <variablelist>
    <varlistentry>
    <term><option>--short-circuit</option></term>
    <listitem><para>
	Skip straight to specified stage (ie, skip all stages leading
	up to the specified stage).  Only valid with <option>-bc</option>
	and <option>-bi</option>. </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--timecheck</option></term>
    <listitem><para>
	Set the "timecheck" age (0 to disable). This value can also be
	configured by defining the macro <Command>%_timecheck</Command>.
	The timecheck value expresses, in seconds, the maximum age of
	a file being packaged. Warnings will be printed for all files
	beyond the timecheck age.
	</para></listitem>
    </varlistentry><varlistentry>
    <term><option>--clean</option></term>
    <listitem><para>
	Remove the build tree after the packages are made.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--rmsource</option></term>
    <listitem><para>
	Remove the sources and spec file after the build (may also be
	used standalone, eg. "&rpm; <option>--rmsource foo.spec</option>").
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--test</option></term>
    <listitem><para>
	Do not execute any build stages. Useful for testing out spec files.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--sign</option></term>
    <listitem><para>
	Embed a PGP signature in the package. This signature can be used
	to verify the integrity and the origin of the package.  See the
	section on PGP SIGNATURES for configuration details.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--buildroot <replaceable>&lt;dir&gt;</replaceable></option></term>
    <listitem><para>
	When building the package, override the BuildRoot tag with directory
	<replaceable>&lt;dir&gt;</replaceable>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--target <replaceable>&lt;platform&gt;</replaceable></option></term>
    <listitem><para>
	When building the package, interpret <replaceable>&lt;platform&gt;</replaceable>
	as <option>arch-vendor-os</option> and set the macros
		<Command>%_target</Command>,
		<Command>%_target_arch</Command>, and
		<Command>_target_os</Command>
    accordingly.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--buildarch <replaceable>&lt;arch&gt;</replaceable></option></term>
    <listitem><para>
	When building the package, set the architecture to
	<replaceable>&lt;arch&gt;</replaceable>. This option
	has been obsoleted by <option>--target</option> in RPM 3.0.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--buildos <replaceable>&lt;os&gt;</replaceable></option></term>
    <listitem><para>
	When building the package, set the architecture to
	<replaceable>&lt;os&gt;</replaceable>. This option has been obsoleted
	by <option>--target</option> in RPM 3.0.
	</para></listitem>
    </varlistentry>
    </variablelist>
    </RefSect1>

    <RefSect1><Title>Rebuild and Recompile Options</Title>
    <para>
	There are two other ways to invoke building with rpm:
    </para>
    <para>
	&rpm; <option>--recompile</option> <replaceable>&lt;source_package_file&gt;+</replaceable>
    </para>
    <para>
	&rpm; <option>--rebuild</option> <replaceable>&lt;source_package_file&gt;+</replaceable>
    </para>
    <para>
	When invoked this way, &rpm; installs the named source
	package, and does a prep, compile and install.  In addition,
	<option>--rebuild</option> builds a new binary package. When the build
	has completed, the build directory is removed (as in
	<option>--clean</option>) and the the sources and spec file for
	the package are removed.
    </para>
    </RefSect1>

    <RefSect1><Title>Signing an Existing Rpm</Title>
    <para>
	&rpm; <option>--resign</option> <replaceable>&lt;binary_package_file&gt;+</replaceable>
    </para>
    <para>
	This option generates and inserts new signatures for the listed
	packages.  Any existing signatures are removed.
    </para>
    <para>
	&rpm; <option>--addsign</option> <replaceable>&lt;binary_package_file&gt;+</replaceable>
    </para>
    <para>
	This option generates and appends new signatures for the listed
	packages to those that already exist.
    </para>
    </RefSect1>

    <RefSect1><Title>PGP Signatures</Title>
    <para>
	In order to use the signature feature RPM must be configured
	to run PGP, and it must be able to find a public key ring with
	RPM public keys in it. By default, RPM uses the PGP defaults
	to find the keyrings (honoring PGPPATH). If your key rings are
	not located where PGP expects them to be, you will need to
	configure the macro <Command>%_pgp_path</Command>
	to be the location of the PGP key rings to use.
    </para>

    <para>
	If you want to be able to sign packages you create yourself, you
	also need to create your own public and secret key pair (see the
	PGP manual). You will also need to configure the macros
    <variablelist>
    <varlistentry>
    <term><Command>%_signature</Command></term>
    <listitem><para>
	The signature type.  Right now only pgp is supported.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><Command>%_pgp_name</Command></term>
    <listitem><para>
	The name of the "user" whose key you wish to use to sign your packages.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>

    <para>
	When building packages you then add <option>--sign</option> to
	the command line. You will be prompted for your pass phrase, and
	your package will be built and signed.  For example, to be able
	to use PGP to sign packages as the user
	<replaceable>>"John Doe &lt;jdoe@foo.com&gt;"</replaceable>>
	from the key rings located in <filename>/etc/rpm/.pgp</filename>
	using the executable <filename>/usr/bin/pgp</filename> you would include
<computeroutput>
%_signature pgp
%_pgp_path /etc/rpm/.pgp
%_pgp_name John Doe &lt;jdoe@foo.com&gt;
%_pgpbin /usr/bin/pgp
</computeroutput>
	in a macro configuration file. Use <filename>/etc/rpm/macros</filename>
	for per-system configuration and <filename>~/.rpmmacros</filename>
	for per-user configuration. 
    </para>
    </RefSect1>

    <RefSect1>
    <Title>Rebuild Database Options</Title>
    <para>
	The general form of an rpm rebuild database command is 
    </para>

    <para>
	&rpm; <option>--rebuilddb</option>
    </para>
 
    <para>
	To rebuild a new database, do: 
    </para>

    <para>
	&rpm; <option>--initdb</option>
    </para>

    <para>
	The only options for these modes are
		<option>--dbpath</option> and
		<option>--root</option>.
    </para>
    </RefSect1>

    <RefSect1><Title>Showrc</Title>
    <para>
	Running
    </para>
  
    <para>
	&rpm; <option>--showrc</option>
    </para>

    <para>
	shows the values &rpm will use for all of the options that may
	be set in <filename>rpmrc</filename> and <filename>macros</filename>
	configuration files.
    </para>
    </RefSect1>

    <RefSect1><Title>Ftp/Http Options</Title>
    <para>
	RPM includes simple FTP and HTTP clients to simplify installing
	and querying packages which are available over the internet.
	Package files for install, upgrade, and query operations may be
	specified as an ftp or <Command>http</Command> style URL:  
    </para>

    <para>
	ftp://&lt;user&gt;:&lt;password&gt;@hostname:&lt;port&gt;/path/to/package.rpm
    </para>
 
    <para>
	If the <Command>:password</Command> portion is omitted, the password will be
	prompted for (once per user/hostname pair). If both the user and
	password are omitted, anonymous ftp is used. In all cases passive
	(PASV) ftp transfers are used.
    </para>
    <para>
	&rpm allows the following options to be used with ftp URLs:
    <variablelist>
    <varlistentry>
    <term><option>--ftpproxy</option> <replaceable>&lt;hostname&gt;</replaceable></term>
    <listitem><para>
	The host <replaceable>&lt;hostname&gt;</replaceable> will be used as a proxy server
	for all ftp transfers, which allows users to ftp through firewall
	machines which use proxy systems. This option may also be specified
	by configuring the macro <Command>%_ftpproxy</Command>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--ftpport <replaceable>&lt;port&gt;</replaceable></option></term>
    <listitem><para>
	The TCP <replaceable>&lt;port&gt;</replaceable> number to use for
	the ftp connection on the proxy ftp server instead of the default
	port. This option may also be specified by configuring the macro
	<Command>%_ftpport</Command>.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>

    <para>
	&rpm; allows the following options to be used with
	<Command>http</Command> URLs:
    <variablelist>
    <varlistentry>
    <term><option>--httpproxy</option> <replaceable>&lt;hostname&gt;</replaceable></term>
    <listitem><para>
	The host <replaceable>&lt;hostname&gt;</replaceable> will be used as
	a proxy server for all <Command>http</Command> transfers. This
	option may also be specified by configuring the macro
	<Command>%_httpproxy</Command>.
    </para></listitem>
    </varlistentry><varlistentry>
    <term><option>--httpport</option> <replaceable>&lt;port&gt;</replaceable></term>
    <listitem><para>
	The TCP <replaceable>&lt;port&gt;</replaceable> number to use for the
	<Command>http</Command> connection on the proxy http server instead
	of the default port. This option may also be specified by configuring
	the macro <Command>%_httpport</Command>.
    </para></listitem>
    </varlistentry>
    </variablelist>
    </para>

    </RefSect1>

    <RefSect1><Title>Files</Title>
    <para>
    <simplelist>
	<member><filename>/usr/lib/rpm/rpmrc</filename></member>
	<member><filename>/etc/rpmrc</filename></member>
	<member><filename>~/.rpmrc</filename></member>
	<member><filename>/usr/lib/rpm/macros</filename></member>
	<member><filename>/etc/rpm/macros</filename></member>
	<member><filename>~/.rpmmacros</filename></member>
	<member><filename>/var/lib/rpm/Conflictname</filename></member>
	<member><filename>/var/lib/rpm/Basenames</filename></member>
	<member><filename>/var/lib/rpm/Group</filename></member>
	<member><filename>/var/lib/rpm/Name</filename></member>
	<member><filename>/var/lib/rpm/Packages</filename></member>
	<member><filename>/var/lib/rpm/Providename</filename></member>
	<member><filename>/var/lib/rpm/Requirename</filename></member>
	<member><filename>/var/lib/rpm/Triggername</filename></member>
	<member><filename>/var/tmp/rpm*</filename></member>
    </simplelist>
    </para>
    </RefSect1>

    <RefSect1><Title>See Also</Title>
    <simplelist>
      <member><Command>rpm2cpio</Command>(8),</member>
      <member><Command>http://www.rpm.org/</Command></member>
    </simplelist>
    </RefSect1>

    <RefSect1><Title>Authors</Title>
    <simplelist>
	<member>Marc Ewing &lt;marc@redhat.com&gt;</member>
	<member>Jeff Johnson &lt;jbj@redhat.com&gt;</member>
	<member>Erik Troan &lt;ewt@redhat.com&gt;</member>
    </simplelist>
    </RefSect1>

  </RefEntry>
</appendix>
